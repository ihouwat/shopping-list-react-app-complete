{"version":3,"sources":["components/SearchArea.js","components/ListItemTemplate.js","components/UncategorizedListItems.js","constants/groceryStores.js","components/CategorizedListItems.js","components/UncategorizedItemSnackbar.js","containers/GroceryLists.js","components/DeleteOrRecoverCompleted.js","components/CompletedList.js","components/EmptyList.js","components/TopNavigation.js","components/TopNavigationTitle.js","components/TopNavigationCategoryList.js","components/TopNavigationCategoryDisplay.js","themes/baseTheme.js","themes/lightTheme.js","themes/darkTheme.js","themes/ThemeProvider.js","components/TopNavigationToggleDarkTheme.js","components/TopNavigationFaves.js","components/FixedScroll.js","components/ErrorBoundary.js","components/LoadingScreen.js","components/ReloadingMessage.js","containers/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","input","paddingLeft","spacing","paddingRight","paddingBottom","textField","marginTop","SearchArea","formChange","formSubmit","formField","changeAutocomplete","closeAutocomplete","autocompleteIsOpen","checkFormField","groceriesTemplate","classes","noValidate","onSubmit","Autocomplete","id","freeSolo","autoComplete","autoHighlight","clearOnEscape","autoSelect","variant","className","inputValue","open","onOpen","onClose","onChange","options","map","option","name","renderInput","params","TextField","value","label","fullWidth","autoFocus","margin","listItem","padding","listItemText","marginBottom","height","display","flexDirection","justifyContent","listItemTextPrimary","fontSize","color","palette","text","primary","listItemTextSecondary","secondary","completedButton","main","modal","alignItems","paper","backgroundColor","background","borderRadius","boxShadow","shadows","width","maxWidth","ListItemTemplate","index","item","modalClose","modalItemName","modalOpen","deleteItem","completeItem","modalIsOpen","itemNotes","onAddNote","ListItem","button","key","ListItemText","disableTypography","onClick","bind","Typography","note","ListItemIcon","IconButton","aria-label","SvgIcon","xmlns","viewBox","d","fill","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paragraph","multiline","type","rows","placeholder","inputProps","list","paddingTop","UncategorizedListItems","groceryItems","category","sortGroceriesAlphabetically","a","b","itemA","toUpperCase","itemB","comparison","listItems","tempList","el","sort","sortedGroceries","List","component","groceryStores","stores","storeName","storeCategories","storeOrder","items","categoryTitle","borderTop","lineHeight","marginLeft","marginRight","textAlign","fontWeight","textTransform","CategorizedListItems","searchGroceryStoreTemplate","store","grocery","storeCategory","i","length","toLowerCase","matchedItem","push","identifyCategoryInStoreTemplate","searchedItem","matchedItemCategory","currentStoreIndex","findIndex","currentStore","copiedStore","storeDeepCopyfunction","inArray","outArray","Array","isArray","undefined","matchId","uncategorizedIndex","find","TransitionUp","props","Slide","direction","UncategorizedItemSnackbar","Transition","React","useState","setOpen","transition","setTransition","Snackbar","onEnter","event","reason","TransitionComponent","autoHideDuration","message","GroceryLists","fireUncategorizedSnackbar","setState","snackbarIsOpen","setTimeout","state","prevProps","prevState","uncategorizedItem","this","activatedSnackbarOnce","Component","delOrRecoverMenu","menuItem","DeleteOrRecoverCompleted","deleteallcompleted","recoverallcompleted","anchorEl","setAnchorEl","handleClose","FormControlLabel","stopPropagation","onFocus","control","disableFocusRipple","size","aria-haspopup","aria-controls","currentTarget","Menu","keepMounted","Boolean","MenuItem","root","panel","default","boxDisplay","summary","flexGrow","details","textDecoration","textDecorationColor","heading","typography","pxToRem","CompletedList","completedItems","recoverItem","expanded","setExpanded","area-label","ExpansionPanel","isExpanded","Box","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","icon","dark","light","textDark","textLight","EmptyList","p","TopNavigation","Paper","elevation","square","Container","children","TopNavigationTitle","class","menuSVG","flexBasis","menuTypography","TopNavigationCategoryList","onCategoryChange","mapCategories","aria-hidden","style","TopNavigationCategoryDisplay","handleClick","themeMap","lightTheme","createMuiTheme","fontFamily","join","contrastText","disabled","hint","darkTheme","ThemeContext","createContext","themeName","ThemeProvider","window","localStorage","getItem","_setThemeName","useEffect","setItem","getThemeByName","Provider","TopNavigationToggleDarMode","selectedTheme","setSelectedTheme","setThemeName","useContext","handleThemeChange","Consumer","modalTitle","TopNavigationFaves","faveCheckChildElement","favoriteItems","listFavoriteItems","dense","divider","Checkbox","checked","isChecked","Set","forEach","has","disablePadding","FixedScroll","left","position","top","zIndex","ErrorBoundary","hasError","error","info","withStyles","LoadingScreen","ReloadingMessage","App","addToList","fetch","method","headers","body","JSON","stringify","then","response","json","onFormChange","target","onChangeAutocomplete","onCloseAutocomplete","autocompleteCheckFormField","onFormSubmit","preventDefault","charAt","slice","stateItems","faveLowerCase","onDeleteItem","onCompleteItem","completedItem","deletedItem","listName","updatedList","onRecoverItem","onDeleteAllCompleted","completeditems","onRecoverAllCompleted","itemName","route","appIsLoading","sessionStorage","app","TopNavigationToggleDarkTheme","groceriesContainer","autocompleteSelectValue","onAutocompleteSelectValue","borderBottomWidth","borderBottomStyle","borderBottomColor","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf28c07d.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React, { Fragment } from 'react';\r\nimport {TextField, makeStyles} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingBottom: theme.spacing(0.75),\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(0.25),\r\n  }\r\n}));\r\n\r\nconst SearchArea = ({ formChange,  formSubmit, formField, changeAutocomplete, closeAutocomplete, autocompleteIsOpen, checkFormField, groceriesTemplate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <form noValidate onSubmit = { formSubmit }>\r\n        <Autocomplete\r\n          id=\"autocomplete-selector\"\r\n          freeSolo\r\n          autoComplete\r\n          autoHighlight\r\n          clearOnEscape\r\n          autoSelect\r\n          variant=\"outlined\" \r\n          className={classes.input}\r\n          inputValue = { formField }\r\n          open = {autocompleteIsOpen}\r\n          onOpen = {checkFormField}\r\n          onClose = {closeAutocomplete}\r\n          onChange = { changeAutocomplete }\r\n          options={groceriesTemplate.map((option) => option.name)}\r\n          renderInput={(params) => (\r\n            <TextField {...params}     \r\n              onChange = { formChange }\r\n              freeSolo \r\n              value = { formField }\r\n              label=\"Add item\" \r\n              fullWidth\r\n              autoFocus\r\n              margin=\"normal\" \r\n              id=\"searchfield\"\r\n              className={classes.textField}\r\n            />\r\n          )}\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchArea","import React from 'react';\r\n// Import Material Design UI Components\r\nimport { TextField, Typography, Modal, Backdrop, Fade, \r\n        makeStyles, ListItem, ListItemText, ListItemIcon, \r\n        IconButton, SvgIcon } from '@material-ui/core';\r\n\r\n        \r\n// Material-UI styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: 0,\r\n  },\r\n  listItemText: {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    height: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingLeft: theme.spacing(2),\r\n    justifyContent: 'center',\r\n  },\r\n  listItemTextPrimary: {\r\n    fontSize: theme.spacing(1.85),\r\n    color: theme.palette.text.primary,\r\n  },\r\n  listItemTextSecondary: {\r\n    fontSize: theme.spacing(1.6),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  completedButton: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  // Modal styles\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.spacing(0.5),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n    maxWidth: 500\r\n  },\r\n}));\r\n\r\nconst ListItemTemplate = ({index, item, modalClose, modalItemName, modalOpen, deleteItem, completeItem, modalIsOpen, itemNotes, onAddNote}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItem className={classes.listItem} button key={index}>\r\n        <ListItemText \r\n          disableTypography\r\n          onClick={modalOpen.bind(this, item)}\r\n          className={classes.listItemText} \r\n        > \r\n          <Typography className={classes.listItemTextPrimary}>{item.name}</Typography>\r\n          <Typography className={classes.listItemTextSecondary}>{item.note}</Typography>\r\n        </ListItemText>\r\n        <ListItemIcon onClick={deleteItem.bind(this, item, 'items')}>\r\n          <IconButton aria-label = 'trash' >\r\n            <SvgIcon>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </ListItemIcon>\r\n        <ListItemIcon onClick={completeItem.bind(this, item)}>\r\n          <IconButton  aria-label=\"item acquired\">\r\n            <SvgIcon className={classes.completedButton}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </ListItemIcon>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={modalIsOpen}\r\n        onClose={modalClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalIsOpen}>\r\n          <div className={classes.paper}>\r\n            <Typography variant='h5' paragraph={true} color=\"textPrimary\">\r\n              {modalItemName}\r\n            </Typography>\r\n            <form>\r\n              <TextField\r\n                id=\"standard-adornment-weight\"\r\n                multiline\r\n                type='text'\r\n                variant = \"filled\"\r\n                rows=\"2\"\r\n                fullWidth\r\n                value={ itemNotes }\r\n                placeholder=\"Enter note\"\r\n                onChange={ onAddNote }\r\n                aria-describedby=\"standard-weight-helper-text\"\r\n                inputProps={{\r\n                  'aria-label': 'add note',\r\n                }}\r\n              />\r\n            </form>\r\n          </div>\r\n          </Fade>\r\n        </Modal>\r\n      </ListItem>\r\n  )\r\n}\r\n\r\nexport default ListItemTemplate;","import React from 'react';\r\n// Import Material Design UI Components\r\nimport ListItemTemplate from './ListItemTemplate';\r\nimport { List, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n\r\nconst UncategorizedListItems = ({modalClose, modalItemName, modalOpen, deleteItem, completeItem, modalIsOpen, itemNotes, onAddNote, groceryItems, category}) => {\r\n  const classes = useStyles();\r\n  \r\n  // Helper method to sort groceries alphabetically\r\n  const sortGroceriesAlphabetically = (a, b) => {\r\n    const itemA = a.name.toUpperCase();\r\n    const itemB = b.name.toUpperCase();\r\n    let comparison = 0;\r\n    if (itemA > itemB) {\r\n      comparison = 1;\r\n    } else if (itemA < itemB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison\r\n  }\r\n  \r\n  // Main method that creates a temporary list based on this.state.items\r\n  const sortedGroceries = () => {\r\n    let tempList = groceryItems.map(el=>el)\r\n    if (category === \"Order Entered\") {\r\n      return tempList\r\n    }\r\n    else if(category === \"Alphabetical\") {\r\n      let sortedList = tempList.sort(sortGroceriesAlphabetically)\r\n      return sortedList\r\n    }\r\n  }\r\n  \r\n  // Create a sorted list which will be passed to the mapping array below\r\n  const listToMap = sortedGroceries();\r\n  // Map out list items\r\n  const listItems = listToMap.map((item, index) => {\r\n    return (\r\n      <ListItemTemplate \r\n        key={index}\r\n        item={item}\r\n        modalClose={modalClose}\r\n        modalItemName={modalItemName}\r\n        modalOpen={modalOpen}\r\n        deleteItem={deleteItem}\r\n        completeItem={completeItem}\r\n        modalIsOpen={modalIsOpen}\r\n        itemNotes={itemNotes}\r\n        onAddNote={onAddNote}\r\n      />\r\n    )\r\n  })\r\n\r\n \r\n  return (\r\n    <List component=\"li\" aria-label=\"grocery list category\" className={classes.list}>\r\n      {listItems}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default UncategorizedListItems;","export const groceryStores = {\r\n  stores: [\r\n    {\r\n      storeName: \"Alphabetical\"\r\n    },\r\n    {\r\n      storeName: \"Order Entered\"\r\n    },\r\n    {\r\n      storeName: \"Fresh Thyme\",\r\n      storeCategories: [\r\n        {\r\n          storeOrder: 1,\r\n          category: 'Produce',\r\n          items: ['Apple', 'Apples', 'Banana','Bananas', 'Grapes', 'Clementines', 'Orange', 'Oranges']\r\n        },\r\n        {\r\n          storeOrder: 2,\r\n          category: 'Bulk Foods',\r\n          items: ['Oatmeal', 'Almonds']\r\n        },\r\n        {\r\n          storeOrder: 3,\r\n          category: 'Fridge',\r\n          items: ['Orange Juice', 'Milk', 'Almond Milk', 'Sausages', 'Tofu']\r\n        },\r\n        {\r\n          storeOrder: 4,\r\n          category: 'Uncategorized Items',\r\n          items: [],\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      storeName: \"Kroger Frandor\",\r\n      storeCategories: [\r\n        {\r\n          storeOrder: 1,\r\n          category: 'Produce',\r\n          items: ['Apple', 'Apples', 'Banana','Bananas', 'Grapes']\r\n        },\r\n        {\r\n          storeOrder: 2,\r\n          category: 'Uncategorized Items',\r\n          items: [],\r\n        }\r\n      ]\r\n    },\r\n  ]\r\n};\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {groceryStores} from '../constants/groceryStores';\r\nimport ListItemTemplate from './ListItemTemplate';\r\n// Import Material Design UI Components\r\nimport { Typography, makeStyles, List} from '@material-ui/core';\r\n\r\n// Material-UI styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  // Category styles\r\n  categoryTitle: {\r\n    borderTop: '1px solid #dadce0',\r\n    lineHeight: '2em',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    paddingTop: theme.spacing(2.25),\r\n    paddingBottom: theme.spacing(2.2),\r\n    textAlign: 'left',\r\n    fontWeight: '700',\r\n    fontSize: theme.spacing(1.8125),\r\n    textTransform: 'uppercase',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  // List styles\r\n  list: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  '@global': {\r\n    'li > p:nth-of-type(1)': {\r\n      borderTop: '0px',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst CategorizedListItems = ({ category, modalItemName, itemNotes, groceryItems, completeItem, deleteItem, onAddNote, modalClose, modalOpen, modalIsOpen }) => {\r\n  // Use styles from this file\r\n  const classes = useStyles();\r\n\r\n  // Helper method to create a temp copy of the grocery store array, with an empty items array\r\n  const storeDeepCopyfunction = (inArray) => {\r\n    let outArray, value, key\r\n      if(typeof inArray !== \"object\" || inArray === null) {\r\n        return inArray // Return the value if inArray is not an object\r\n      }\r\n      // Create an array or object to hold the values\r\n      outArray = Array.isArray(inArray) ? [] : {}\r\n      for (key in inArray) {\r\n        value = inArray[key]\r\n        // Recursively (deep) copy for nested objects, including arrays\r\n        outArray[key] = (key === 'items') ?  outArray[key] = []\r\n        : (typeof value === \"object\" && value !== null && key !== 'items') ? storeDeepCopyfunction(value)\r\n        : value\r\n      }\r\n    return outArray\r\n  }\r\n\r\n  // Helper method to search Grocery Store template array for item\r\n  const searchGroceryStoreTemplate = (store, grocery) => {\r\n    for (const storeCategory of store) {\r\n      for (let i=0; i<storeCategory.items.length; i++) {\r\n        if (storeCategory.items[i] && grocery && storeCategory.items[i].toLowerCase() === grocery.name.toLowerCase()) {\r\n          // If an item matches one found in the template store, create new array\r\n          let matchedItem = [];\r\n          // Matched item array includes an object with store-specific id, category, name \r\n          matchedItem.push({\r\n              storeOrder: storeCategory.storeOrder,\r\n              category: storeCategory.category,\r\n              name: grocery.name,\r\n            });\r\n          return matchedItem\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Helper method to match item with its relevant store category\r\n  const identifyCategoryInStoreTemplate = (searchedItem, store) => {\r\n    // Variable to isolate the item category\r\n    let matchedItemCategory = searchedItem[0].storeOrder\r\n    for (let i = 0; i < store.length; i++ ) {\r\n      if(store[i].storeOrder === matchedItemCategory){\r\n        return store[i].storeOrder\r\n      }\r\n    }\r\n  }\r\n\r\n  const sortedGroceries = () => {\r\n    // Change current store by listening to state changes of 'category' from top-level App.js\r\n    let currentStoreIndex = groceryStores.stores.findIndex((store, index) => store.storeName === category)\r\n    let currentStore = groceryStores.stores[currentStoreIndex]\r\n    // Create a temporary list of the groceryItems coming from top-level App.js\r\n    let tempList = groceryItems.map(el=>el)\r\n    // Create a copy of the store template\r\n    const copiedStore = storeDeepCopyfunction(currentStore)\r\n    for (const item in tempList) {\r\n      // Find if item from template list in store template\r\n      let searchedItem = searchGroceryStoreTemplate(currentStore.storeCategories, tempList[item])\r\n      if (searchedItem !== undefined){\r\n        // Match the item with its category storeOrder in current store template\r\n        const matchId = identifyCategoryInStoreTemplate(searchedItem, currentStore.storeCategories)\r\n        for (let i in copiedStore.storeCategories){\r\n          // If match, add the item in the appropriate array index of copiedStore\r\n          if (copiedStore.storeCategories[i].storeOrder === matchId) {\r\n            copiedStore.storeCategories[i].items.push(tempList[item])\r\n          }\r\n        }\r\n      } else {\r\n        // If the new item does not match any known category, push to \"Uncategorized Items\"\r\n        // Find \"Uncategorized Items\" index in the store\r\n        let uncategorizedIndex = copiedStore.storeCategories.find(category => category.category === 'Uncategorized Items')\r\n        // Add new key-value pair to item. This triggers the fireUncategorizedSnackbar() method in App.js\r\n        // This leads to a snackbar popping up to warn the user the added item is uncategorized\r\n        if(!tempList[item]['activatedSnackbarOnce']){\r\n          tempList[item]['activatedSnackbarOnce'] = true;\r\n        }\r\n        // Push items to the \"Uncategorized Items\" index\r\n        uncategorizedIndex.items.push(tempList[item])\r\n      }\r\n    }    \r\n    return copiedStore\r\n  }\r\n\r\n  // Create a sorted list which will be passed to the mapping array below\r\n  const listToMap = sortedGroceries();\r\n  \r\n  const listItems = (listToMap.storeCategories).map((category, index) => {\r\n    return (\r\n      <Fragment key={index} >\r\n      { category.items.length > 0\r\n        ? <Typography key={index} className = {classes.categoryTitle}>\r\n            {category.category}\r\n          </Typography>\r\n        : null\r\n      }\r\n      {category.items.map((item, index) => {\r\n          return (\r\n            <ListItemTemplate \r\n              key={index}\r\n              item={item}\r\n              modalClose={modalClose}\r\n              modalItemName={modalItemName}\r\n              modalOpen={modalOpen}\r\n              deleteItem={deleteItem}\r\n              completeItem={completeItem}\r\n              modalIsOpen={modalIsOpen}\r\n              itemNotes={itemNotes}\r\n              onAddNote={onAddNote}\r\n            />\r\n          )\r\n        })}\r\n      </Fragment>\r\n    ) \r\n})\r\n \r\n  return (\r\n    <List component=\"li\" aria-label=\"grocery list category\" className={classes.list}>\r\n      {listItems}\r\n    </List>\r\n  )\r\n\r\n}\r\n\r\nexport default CategorizedListItems;","import React from 'react';\r\nimport { Snackbar, Slide } from '@material-ui/core';\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst UncategorizedItemSnackbar = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [transition, setTransition] = React.useState(undefined);\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setTransition(() => Transition);\r\n    setOpen(open)\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return setOpen(false);\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={open}\r\n        onEnter={handleClick(TransitionUp)}\r\n        onClose={handleClose}\r\n        TransitionComponent={transition}\r\n        autoHideDuration={4000}\r\n        message=\"Added item is uncategorized.\"\r\n      />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default UncategorizedItemSnackbar;\r\n","import React, {Component, Fragment } from 'react';\r\nimport UncategorizedListItems from '../components/UncategorizedListItems'\r\nimport CategorizedListItems from '../components/CategorizedListItems'\r\nimport UncategorizedItemSnackbar from '../components/UncategorizedItemSnackbar'\r\n\r\n\r\nclass GroceryLists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbarIsOpen: false, \r\n    }\r\n  }\r\n\r\n  // Listen for new added items. If the item is uncategorized, it will fire the snackbar \r\n  componentDidUpdate(prevProps, prevState) {\r\n    const uncategorizedItem = this.props.items[this.props.items.length - 1]\r\n    if(prevProps.modalIsOpen !== this.props.modalIsOpen) {\r\n      // If modal to add item notes opens or closes, do not fire the snackbar\r\n      // Fixes a bug where if the last item added to the grocery list is uncategorized\r\n      // The snackbar is always fired\r\n      return\r\n    } else if (\r\n      uncategorizedItem !== undefined \r\n      && prevProps.items !== this.props.items \r\n      && uncategorizedItem.activatedSnackbarOnce === true\r\n      ) {\r\n      this.fireUncategorizedSnackbar()\r\n    } \r\n  }\r\n\r\n  // Checks for uncategorized items to toggle snackbar warning\r\n  fireUncategorizedSnackbar = () => {\r\n      this.setState({snackbarIsOpen: true})\r\n      setTimeout(() => {\r\n        this.setState({snackbarIsOpen: false});\r\n      }, 4500);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {...props} = this.props;\r\n    const {category, groceryItems} = this.props;\r\n    const {snackbarIsOpen} = this.state;\r\n    return (\r\n      <Fragment>\r\n        {groceryItems.length > 0 \r\n          ?\r\n            category === 'Order Entered' || category === 'Alphabetical' \r\n            ? <UncategorizedListItems {...props}/>\r\n            : <CategorizedListItems {...props}/>\r\n            \r\n          : null\r\n          }\r\n          {\r\n            snackbarIsOpen ? <UncategorizedItemSnackbar /> \r\n            : null\r\n          }\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroceryLists;","import React, { Fragment } from 'react';\r\nimport { FormControlLabel, makeStyles, Menu, MenuItem, IconButton, SvgIcon } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  delOrRecoverMenu: {\r\n    marginRight: theme.spacing(-1),\r\n  },\r\n  menuItem: {\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    paddingTop: theme.spacing(1.5),\r\n    paddingBottom: theme.spacing(1.5),\r\n    fontSize: theme.spacing(1.75),\r\n  },\r\n}))\r\n\r\nconst DeleteOrRecoverCompleted = ({deleteallcompleted, recoverallcompleted}) => {\r\nconst classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormControlLabel\r\n        aria-label=\"Menu\"\r\n        onClick={(event) => event.stopPropagation()}\r\n        onFocus={(event) => event.stopPropagation()}\r\n        control={\r\n          <IconButton \r\n          disableFocusRipple\r\n          size='medium'\r\n          color='default'\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"simple-menu\"\r\n          onClick={handleClick}\r\n          className={classes.delOrRecoverMenu}\r\n          >\r\n            <SvgIcon>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -1 19 21\" width=\"19px\" height=\"19px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n          }\r\n        />\r\n        <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        >\r\n          <MenuItem className={classes.menuItem} onClick={()=> {\r\n            handleClose()\r\n            recoverallcompleted()\r\n            }}>Uncheck all items</MenuItem>\r\n            <MenuItem className={classes.menuItem} onClick={()=> {\r\n            handleClose()\r\n            deleteallcompleted()\r\n            }}>Delete all checked items</MenuItem>\r\n        </Menu>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DeleteOrRecoverCompleted;","import React from 'react';\r\nimport './CompletedList.css';\r\nimport DeleteOrRecoverCompleted from './DeleteOrRecoverCompleted';\r\n\r\n// Import Material Design UI Components\r\nimport { Box, makeStyles, List, ListItem, ListItemText, ListItemIcon, Typography, ExpansionPanel, ExpansionPanelSummary,ExpansionPanelDetails, IconButton, SvgIcon } from '@material-ui/core';\r\n\r\n// Expansion Panel styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  panel: {\r\n    boxShadow: 'none',\r\n    background: theme.palette.background.default,\r\n  },\r\n  boxDisplay: {\r\n    display: \"flex\",\r\n    height: theme.spacing(8),\r\n  },\r\n  summary: {\r\n    padding: '0 16px 0 0',\r\n    flexGrow: 1,\r\n  },\r\n  details: {\r\n    padding: '0',\r\n    textDecoration: 'line-through',\r\n    textDecorationColor: theme.palette.text.secondary,\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    paddingRight: '0',\r\n  },\r\n}));\r\n\r\nconst CompletedList = ({ completedItems, deleteItem, recoverItem, deleteallcompleted, recoverallcompleted }) => {\r\n  //Expansion panel settings from Material-UI\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // Compiling list\r\n  const listItems = completedItems.map((item, index) => {\r\n    return (\r\n    <ListItem button key={index} className = {classes.listItem}>\r\n      <ListItemText secondary = {item.name}  />\r\n      <ListItemIcon onClick={deleteItem.bind(this, item, 'completedItems')}>\r\n        <IconButton aria-label=\"trash item\">\r\n          <SvgIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </ListItemIcon>\r\n      <ListItemIcon onClick={recoverItem.bind(this, item)}>\r\n        <IconButton area-label=\"recover item\">\r\n          <SvgIcon>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    )\r\n  })\r\n\r\n  if(completedItems.length === 0) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel className={classes.panel} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <Box className={classes.boxDisplay}>\r\n          <ExpansionPanelSummary\r\n            expandIcon={\r\n              <SvgIcon>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n              </SvgIcon>\r\n            }\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n            className={classes.summary}\r\n          >\r\n            <Typography className={classes.heading}>{completedItems.length} checked off</Typography>\r\n          </ExpansionPanelSummary>\r\n          <DeleteOrRecoverCompleted\r\n            deleteallcompleted={deleteallcompleted} \r\n            recoverallcompleted={recoverallcompleted}\r\n          />\r\n        </Box>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <List component=\"li\" aria-label=\"completed items\" className={classes.list}>\r\n            {listItems}\r\n          </List>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompletedList;","import React, { Fragment } from 'react';\r\nimport {SvgIcon, Box, makeStyles, Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.primary.dark,\r\n    backgroundColor: theme.palette.primary.light,\r\n    borderRadius: 100,\r\n    padding: theme.spacing(5.5),\r\n    fontSize: theme.spacing(18),\r\n  },\r\n  textDark: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(4),\r\n    color: theme.palette.text.primary,\r\n    maxWidth: theme.spacing(35),\r\n    fontSize: theme.spacing(2),\r\n    fontWeight: 600,\r\n  },\r\n  textLight: {\r\n    display: 'block',\r\n    color: theme.palette.text.secondary,\r\n    maxWidth: theme.spacing(35),\r\n    fontSize: theme.spacing(1.7),\r\n  },\r\n}))\r\n\r\nconst EmptyList = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        p={6}\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <SvgIcon className={classes.icon}>  \r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n        </SvgIcon>\r\n        <Typography>\r\n          <span className={classes.textDark}>\r\n          {'Your list is empty'}\r\n          </span>\r\n          <br />\r\n          <span className={classes.textLight}>\r\n          {'Start adding things you need to make sure nothing is left. '}\r\n          {'Pick your store to modify the layout of categories.'}\r\n          </span>\r\n        </Typography>\r\n      </Box>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmptyList","import React, { Fragment } from 'react';\r\nimport { Paper, Container, Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TopNavigation = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={4} square={true} className={classes.paper}>\r\n        <Container maxWidth=\"sm\">\r\n          <Box display=\"flex\" alignItems=\"center\" height={64}>\r\n            {props.children}\r\n          </Box>\r\n        </Container>\r\n      </Paper>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TopNavigation;","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport \"./TopNavigationTitle.css\";\r\n\r\nconst TopNavigationTitle = () => {\r\n  return (\r\n    <Box fontSize={20} flexGrow={1} textAlign=\"left\" color=\"text.primary\">\r\n      <h1 class=\"App-title\">My Shopping List</h1>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TopNavigationTitle","import React, { Fragment } from 'react';\r\nimport {Typography, SvgIcon, MenuItem, makeStyles} from '@material-ui/core';\r\nimport {groceryStores} from '../constants/groceryStores';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuItem: {\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    paddingTop: theme.spacing(1.5),\r\n    paddingBottom: theme.spacing(1.5),\r\n  },\r\n  menuSVG: {\r\n    flexBasis: '20%',\r\n    paddingRight: theme.spacing(1.5),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  menuTypography: {\r\n    fontSize: theme.spacing(1.75),\r\n  },\r\n}))\r\n\r\n\r\nconst TopNavigationCategoryList = ({handleClose, category, onCategoryChange}) => {\r\n  const classes = useStyles();\r\n  const mapCategories= groceryStores.stores.map((store, index) => {\r\n    return (\r\n      <MenuItem className={classes.menuItem} key={index} onClick={() => {\r\n        onCategoryChange(store.storeName)\r\n        handleClose();\r\n      }}>\r\n        <SvgIcon className={classes.menuSVG} fontSize=\"small\">\r\n          {category === store.storeName\r\n            ? <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"false\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\r\n            : <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" style={{display: 'none'}} height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\r\n          }\r\n        </SvgIcon>\r\n        <Typography className={classes.menuTypography}>\r\n          {store.storeName}\r\n        </Typography>\r\n      </MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      {mapCategories}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TopNavigationCategoryList;","import React, { Fragment, Component } from 'react';\r\nimport TopNavigationCategoryList from './TopNavigationCategoryList';\r\nimport {IconButton, SvgIcon, Menu, Box} from '@material-ui/core';\r\n\r\nclass TopNavigationCategoryDisplay extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        anchorEl: null,\r\n      }\r\n    }\r\n\r\n    handleClick = (event) => {\r\n      this.setState({anchorEl: event.currentTarget});\r\n    };\r\n\r\n    handleClose = () => {\r\n      this.setState({anchorEl: null});\r\n    };\r\n\r\n  render() {\r\n    const category = this.props.category;\r\n    const {onCategoryChange} = this.props;\r\n    const {anchorEl} = this.state;\r\n    return (\r\n      <Fragment>\r\n        <IconButton \r\n            disableFocusRipple\r\n            size='medium'\r\n            aria-label='pick category'\r\n            aria-haspopup=\"true\"\r\n            aria-controls=\"simple-menu\"\r\n            onClick={this.handleClick}\r\n            color='primary'\r\n          >\r\n            <SvgIcon>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          value={category} \r\n        >\r\n          <Box\r\n            width={200}\r\n          >\r\n            <TopNavigationCategoryList\r\n              onCategoryChange= { onCategoryChange }\r\n              category = { category }\r\n              handleClose = { this.handleClose }\r\n            />\r\n          </Box>\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNavigationCategoryDisplay;","import { lightTheme } from \"./lightTheme\";\r\nimport { darkTheme } from \"./darkTheme\";\r\n\r\nexport function getThemeByName(theme) {\r\n  return themeMap[theme];\r\n}\r\n\r\nconst themeMap = {\r\n  lightTheme,\r\n  darkTheme\r\n};","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\"'Telex'\", 'sans-serif'].join(','),\r\n  },\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#0040cb',\r\n      light: '#e7e9fa',\r\n      dark: '#002bb3',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      main: '#cb0040',\r\n      light: '#fce2e7',\r\n      dark: '#a3003c',\r\n      contrastText: '#fff'\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.70)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)'\r\n    },\r\n    background: {\r\n      default: \"#fafafa\",\r\n    },\r\n  },\r\n  spacing: 8,\r\n});\r\n\r\n// lightTheme.overrides = {\r\n//   ...lightTheme.overrides,\r\n//   MuiIconButton: {\r\n//       ...lightTheme.MuiButton,\r\n//       root: {\r\n//          ...lightTheme.root,\r\n//           backgroundColor: '#53471f',\r\n//       },\r\n//       label: {\r\n//         ...lightTheme.label,\r\n//         color: lightTheme.palette.primary.main,\r\n//       }\r\n//   },\r\n// }","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\"'Telex'\", 'sans-serif'].join(','),\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#c3c8f3',\r\n      light: '#e6e8fa',\r\n      dark: '#8a94d4',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      main: '#f7b6c3',\r\n      light: '#fce2e7',\r\n      dark: '#f1879c',\r\n    },\r\n    background: {\r\n      paper: '#1C2A35', \r\n      default: '#17242C',\r\n    }\r\n  },\r\n  spacing: 8,\r\n});\r\n\r\n// darkTheme.overrides = {\r\n//   ...darkTheme.overrides,\r\n//   MuiIconButton: {\r\n//       ...darkTheme.MuiButton,\r\n//       root: {\r\n//          ...darkTheme.root,\r\n//           backgroundColor: '#14c5ed',\r\n//       },\r\n//       label: {\r\n//         ...darkTheme.label,\r\n//         color: darkTheme.palette.primary.main,\r\n//       }\r\n//   },\r\n// }\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport { getThemeByName } from './baseTheme';\r\n\r\nexport const ThemeContext = React.createContext(themeName => {});\r\n\r\nconst ThemeProvider = props => {\r\n  // State to hold the selected theme name\r\n  const [themeName, _setThemeName] = useState(window.localStorage.getItem(\"theme\") || \"lightTheme\");\r\n  // Save theme to local browser storage\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"theme\", themeName);\r\n  }, [themeName]);\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = getThemeByName(themeName);\r\n  return (\r\n    <ThemeContext.Provider value={_setThemeName}>\r\n      <MuiThemeProvider theme={createMuiTheme(theme)}>{props.children}</MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ThemeProvider;","import React, { useContext, useState } from 'react';\r\nimport { IconButton, SvgIcon } from '@material-ui/core';\r\nimport { ThemeContext } from '../themes/ThemeProvider';\r\n\r\nconst TopNavigationToggleDarMode = () => {\r\n  const [selectedTheme, setSelectedTheme] = useState(\r\n    localStorage.getItem(\"theme\") || \"LightTheme\"\r\n  );\r\n  const setThemeName = useContext(ThemeContext);\r\n\r\n  const handleThemeChange = () => {\r\n    selectedTheme === \"lightTheme\"\r\n      ? setSelectedTheme(\"darkTheme\")\r\n      : setSelectedTheme(\"lightTheme\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setThemeName(selectedTheme);\r\n  });\r\n  return (\r\n    <ThemeContext.Consumer>\r\n    {() => (\r\n      <IconButton \r\n          disableFocusRipple\r\n          size='medium'\r\n          color='primary.main'\r\n          aria-label='toggle between dark and light modes'\r\n          onClick={handleThemeChange}\r\n        >\r\n        <SvgIcon>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z\"/></svg>\r\n        </SvgIcon>\r\n      </IconButton>\r\n    )}\r\n    </ThemeContext.Consumer>\r\n  )\r\n}\r\n\r\n\r\nexport default TopNavigationToggleDarMode\r\n","import React, { Fragment } from 'react';\r\nimport {Checkbox, IconButton, SvgIcon, Modal, Backdrop, Fade, makeStyles, List, ListItem, ListItemText, ListItemIcon} from '@material-ui/core';\r\nimport \"./TopNavigationFaves.css\";\r\n\r\n// Modal styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.spacing(0.5),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n    maxWidth: 375,\r\n  },\r\n  modalTitle: {\r\n    marginTop: 0,\r\n  },\r\n  listItem: {\r\n    height: theme.spacing(5.5),\r\n  },\r\n}));\r\n\r\n\r\nconst TopNavigationFaves = ({items, faveCheckChildElement, favoriteItems}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = (event) => {\r\n    let myObjects = items;\r\n    let map = new Set(myObjects.map(el=>el.name.toLowerCase()));\r\n    favoriteItems.forEach(item => {\r\n     if(item.isChecked && !map.has(item.name.toLowerCase())) {\r\n         return item.isChecked = false\r\n        } else if (!item.isChecked && map.has(item.name.toLowerCase())) {\r\n          return item.isChecked = true\r\n        } \r\n    })\r\n    setOpen(true);\r\n  };  \r\n\r\n  const handleClose = (event, reason) => {\r\n    if(reason === \"backdropClick\") {\r\n      return setOpen(false)\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const listFavoriteItems  = favoriteItems.map((item, index) => {\r\n    return (\r\n      <ListItem dense divider key={index} className={classes.listItem}>\r\n      <ListItemText primary={item.name}/>\r\n      <ListItemIcon>\r\n        <Checkbox \r\n          checked = {item.isChecked}\r\n          key = {item.id}\r\n          value = {item.name}\r\n          onClick={faveCheckChildElement}\r\n          inputProps={{ 'aria-label': 'uncontrolled-checkbox' }}\r\n        />\r\n      </ListItemIcon>\r\n      </ListItem>\r\n  )})\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <IconButton \r\n          disableFocusRipple\r\n          size='medium'\r\n          color='default'\r\n          aria-label='select favorite items'\r\n          onClick={handleOpen}\r\n        >\r\n        <SvgIcon>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n        </SvgIcon>\r\n      </IconButton>\r\n      </Fragment>\r\n      <Fragment>\r\n        <Modal\r\n          aria-labelledby=\"favorite items\"\r\n          aria-describedby=\"pick your top favorite items\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper + ' Modal-dimensions'}>\r\n              <h2 id=\"transition-modal-title\" className={classes.modalTitle}>Top 10 Favorite Items</h2>\r\n              <List dense disablePadding>\r\n                {listFavoriteItems}\r\n              </List>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </Fragment>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default TopNavigationFaves;","import React from 'react';\r\n\r\nconst FixedScroll = (props) => {\r\n  return (\r\n    <div style={{ left: '0', position: 'fixed', width: '100vw', top: '0', zIndex: '100' }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedScroll;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SvgIcon, Box, withStyles, Typography} from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  background: {\r\n    background: theme.palette.background.default,\r\n  },\r\n  icon: {\r\n    color: theme.palette.secondary.main,\r\n    fontSize: theme.spacing(25),\r\n  },\r\n  textDark: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.secondary.main,\r\n    fontSize: theme.spacing(3),\r\n    fontWeight: 600,\r\n  },\r\n})\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.hasError) {\r\n      return ( \r\n        <Fragment>\r\n          <Box\r\n            className={classes.background}\r\n            height = '100vh'\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <SvgIcon className={classes.icon}>  \r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"/></svg>            </SvgIcon>\r\n            <Typography variant=\"h1\" className={classes.textDark}>\r\n              Ooops, something broke in the app!\r\n            </Typography>\r\n          </Box>\r\n        </Fragment>\r\n      )\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ErrorBoundary);","import React from 'react';\r\nimport './LoadingScreen.css';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  background: {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: theme.palette.primary.dark,\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst LoadingScreen = () => {\r\n  const classes = useStyles();\r\n  return(\r\n    <>\r\n      <div className={classes.background}>\r\n        <div class=\"container\">\r\n          <div class=\"bear\">\r\n            <div class=\"head\">\r\n              <div class=\"head-copy\"></div>\r\n              <div class=\"left-ear\">\r\n                <div class=\"inner-ear\"></div>\r\n              </div>\r\n              <div class=\"right-ear\">\r\n                <div class=\"inner-ear\"></div>\r\n              </div>\r\n              <div class=\"left-eye\">\r\n                <div class=\"left-pupil\"></div>\r\n              </div>\r\n              <div class=\"right-eye\">\r\n                <div class=\"right-pupil\"></div>\r\n              </div>\r\n              <div class=\"snout\">\r\n                <div class=\"nose\"></div>\r\n                <div class=\"upper-lip\"></div>\r\n                <div class=\"lip-left\"></div>\r\n                <div class=\"lip-right\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"torso\">\r\n              <div class=\"right-arm\">\r\n                <div class=\"claws\"></div>\r\n              </div>\r\n              <div class=\"left-arm\">\r\n                <div class=\"claws\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"legs\">\r\n              <div class=\"right-leg\">\r\n                <div class=\"toes\"></div>\r\n              </div>\r\n              <div class=\"left-leg\">\r\n                <div class=\"toes\"></div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n          <div class=\"plumes\">\r\n            <div class=\"plume-1\"></div>\r\n            <div class=\"plume-2\"></div>\r\n            <div class=\"plume-3\"></div>\r\n            <div class=\"plume-4\"></div>\r\n            <div class=\"plume-5\"></div>\r\n          </div>\r\n          <div class=\"shopping-cart\">\r\n            <div class=\"handle\"></div>\r\n            <div class=\"back\"></div>\r\n            <div class=\"body-top\"></div>\r\n            <div class=\"body-front\"></div>\r\n            <div class=\"body-bottom\"></div>\r\n            <div class=\"body-vertical-stripes\"></div>\r\n            <div class=\"body-horizontal-stripes\"></div>\r\n            <div class=\"body-to-base\"></div>\r\n            <div class=\"base-curve\"></div>\r\n            <div class=\"base-bottom\"></div>\r\n            <div class=\"wheels\">\r\n              <div class=\"back-wheel\">\r\n                <div class=\"wheel-inner\"></div>\r\n              </div>\r\n                <div class=\"front-wheel\">\r\n                <div class=\"wheel-inner\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"fumes\">\r\n            <div class=\"fume-1\"></div>\r\n            <div class=\"fume-2\"></div>\r\n            <div class=\"fume-3\"></div>\r\n            <div class=\"fume-4\"></div>\r\n            <div class=\"fume-5\"></div>\r\n            <div class=\"fume-6\"></div>\r\n          </div>\r\n          <div class=\"text\">\r\n            Get ready to zoom along while I fetch your lists! \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoadingScreen;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  message: {\r\n    color: theme.palette.text.secondary,\r\n    fontSize: theme.spacing(2),\r\n    marginTop: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst ReloadingMessage = () => {\r\n  const classes = useStyles();\r\n  return(\r\n    <h1 className={classes.message}>Reloading lists...</h1>\r\n  )\r\n}\r\n\r\nexport default ReloadingMessage;","import React, { Component } from 'react';\r\nimport './App.css';\r\n// Import Components\r\nimport SearchArea from '../components/SearchArea';\r\nimport GroceryLists from './GroceryLists';\r\nimport CompletedList from '../components/CompletedList';\r\nimport EmptyList from '../components/EmptyList';\r\nimport TopNavigation from '../components/TopNavigation';\r\nimport TopNavigationTitle from '../components/TopNavigationTitle';\r\nimport TopNavigationCategoryDisplay from '../components/TopNavigationCategoryDisplay';\r\nimport TopNavigationToggleDarkTheme from '../components/TopNavigationToggleDarkTheme';\r\nimport TopNavigationFaves from '../components/TopNavigationFaves';\r\nimport FixedScroll from '../components/FixedScroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport LoadingScreen from '../components/LoadingScreen';\r\nimport ReloadingMessage from '../components/ReloadingMessage';\r\n// Import Material Design UI Custom Theme API\r\nimport {  Box, withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  app: {\r\n    background: theme.palette.background.default,\r\n    textAlign: 'center',\r\n    height: '100%',\r\n  },\r\n  groceriesContainer: {\r\n    background: theme.palette.background.paper,\r\n    borderBottomWidth: '1px',\r\n    borderBottomStyle: 'solid',\r\n    borderBottomColor: theme.palette.divider,\r\n  },\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appIsLoading: window.sessionStorage.getItem(\"loadStatus\") || \"first load\",\r\n      items: [], // populated from back-end, see componentDidMount method\r\n      completedItems: [], // populated from back-end, see componentDidMount method\r\n      favoriteItems: [], // populated from back-end, see componentDidMount method\r\n      groceriesTemplate: [], // populated from back-end, see componentDidMount method\r\n      formField: '',\r\n      category: 'Fresh Thyme',\r\n      modalIsOpen: false,\r\n      modalItemName: '',\r\n      itemNotes: '',\r\n      autocompleteIsOpen: false,\r\n    }\r\n    this.onCompleteItem = this.onCompleteItem.bind(this);\r\n    this.onDeleteItem = this.onDeleteItem.bind(this);\r\n    this.onRecoverItem = this.onRecoverItem.bind(this);\r\n    this.addToList = this.addToList.bind(this);\r\n    this.modalClose = this.modalClose.bind(this);\r\n    this.modalOpen = this.modalOpen.bind(this);\r\n    this.onCloseAutocomplete = this.onCloseAutocomplete.bind(this);\r\n    this.autocompleteCheckFormField=this.autocompleteCheckFormField.bind(this);\r\n  }\r\n\r\n  // Methods\r\n  // On mount, get items, completed items, and top ten favorite items\r\n  componentDidMount () {\r\n    fetch('https://quickshopper-backend.herokuapp.com/')\r\n    .then(response => response.json())\r\n    .then(response => \r\n      this.setState({\r\n        items: response.items,\r\n        completedItems: response.completedItems,\r\n        favoriteItems: response.favoriteItems,\r\n        groceriesTemplate: response.groceriesTemplate,\r\n        category: window.localStorage.getItem('category') || 'Order Entered',\r\n        appIsLoading: null,\r\n      }))\r\n      window.sessionStorage.setItem('loadStatus', 'reloading')\r\n  }\r\n\r\n  // Generic add grocery method\r\n  addToList = (item) => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/additem', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({name: item})\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => this.setState({items: response.items}))\r\n  }\r\n\r\n  // Listen to search area input for the searchform component\r\n  onFormChange = (event) => {\r\n    this.setState({formField: event.target.value})\r\n  }\r\n\r\n  // When selecting item from autocomplete, add grocery item and clear form\r\n  onChangeAutocomplete = (event, value, reason) => {\r\n    // If selected value null, nothing happens\r\n    if (reason === \"blur\") {\r\n      this.setState({formField: ''})\r\n      this.setState({autocompleteIsOpen: false})\r\n      return\r\n    } else if (value === null ) {\r\n      return\r\n    }\r\n    //Add selected value to list\r\n    this.addToList(value)\r\n    //Empty form\r\n    this.setState({formField: ''})\r\n  } \r\n\r\n  onCloseAutocomplete = (event, reason) => {\r\n    if(reason === \"escape\" || reason === \"select-option\"){\r\n      this.setState({autocompleteIsOpen: false})\r\n    } \r\n  } \r\n\r\n  autocompleteCheckFormField = (event) => {\r\n    if (this.state.formField === '') {\r\n      this.setState({autocompleteIsOpen: false})\r\n    } \r\n    else{this.setState({autocompleteIsOpen: true})\r\n  }\r\n  }\r\n\r\n\r\n  // Listen to search area input while filling out list item note\r\n  onAddNote = (event) => {\r\n    this.setState({itemNotes: event.target.value})\r\n  }\r\n\r\n  // On 'enter' add grocery item\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.formField === '') {\r\n      return;\r\n    }\r\n    this.addToList(this.state.formField.charAt(0).toUpperCase(0) + this.state.formField.slice(1))\r\n    this.setState({formField: ''})\r\n  }\r\n\r\n  // Checks grocery list for matches with favorite items\r\n  // Toggles checkbox in Favorite Items modal depending on grocery list content\r\n  // Adds/deletes items to the list\r\n  faveCheckChildElement = (event) => {\r\n    let favoriteItems = this.state.favoriteItems\r\n    let stateItems = new Set(this.state.items.map(el=>el.name.toLowerCase()));\r\n    //Toggle checkbox\r\n    favoriteItems.forEach(item => {\r\n      if (item.name === event.target.value)\r\n      item.isChecked =  event.target.checked\r\n    })\r\n    //Search grocery list and add/remove items accordingly\r\n    favoriteItems.forEach(item => {\r\n      let faveLowerCase = item.name.toLowerCase()\r\n      if(item.isChecked && !stateItems.has(faveLowerCase)) {\r\n        this.addToList(item.name)\r\n      } else if (!item.isChecked && stateItems.has(faveLowerCase)) {\r\n        this.onDeleteItem(item, 'items')\r\n      }\r\n    }) \r\n  }\r\n\r\n  // Acquire grocery item, move item from active to completed list\r\n  onCompleteItem = (completedItem) => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/completeitem', {\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        item: completedItem,\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      this.setState({\r\n        items: response.items,\r\n        completedItems: response.completedItems\r\n      })\r\n    })\r\n  }\r\n\r\n  // Fully delete item from whichever list it is in \r\n  onDeleteItem = (deletedItem, listName) => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/deleteitem', {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        item: deletedItem,\r\n        listName: listName\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        response.listName === 'items' ? this.setState({items: response.updatedList})\r\n        : this.setState({completedItems: response.updatedList})\r\n        }) \r\n  }\r\n\r\n  // Readd item from completed list to grocery list\r\n  onRecoverItem = (item) => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/recoveritem',{\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        item: item,\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => \r\n      this.setState({\r\n        items: response.items,\r\n        completedItems: response.completedItems,\r\n      })\r\n    )\r\n  }\r\n\r\n  // Remove all completed items from completed List\r\n  onDeleteAllCompleted = () => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/deleteallcompleted',{\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => this.setState({completedItems: response.completeditems}))\r\n  }\r\n\r\n    // Readd all completed items to grocery list\r\n  onRecoverAllCompleted = () => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/recoverallcompleted',{\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => \r\n        this.setState({\r\n          items: response.items,\r\n          completedItems: response.completedItems,\r\n        })\r\n      )\r\n  }\r\n\r\n   // Modal open method for grocery list component\r\n   // For adding notes to grocery list item\r\n   modalOpen = (item) => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/openmodal',{\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        item: item\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => \r\n        this.setState({\r\n          modalItemName: response.modalItemName,\r\n          itemNotes: response.itemNotes,\r\n          modalIsOpen: true\r\n        }))\r\n   };\r\n \r\n    // Modal close method for grocery list component\r\n    // Saves note to database\r\n   modalClose = () => {\r\n    fetch('https://quickshopper-backend.herokuapp.com/addnote',{\r\n      method: 'PUT',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        itemName: this.state.modalItemName,\r\n        note: this.state.itemNotes,\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => this.setState({items: response.items}))\r\n    .then(this.setState({\r\n      modalIsOpen: false,\r\n      itemNotes: '',\r\n      modalItemName: ''\r\n    })); // Close modal\r\n  };\r\n\r\n  // Category menu handle to change category or grocery store\r\n  onCategoryChange = (route) => {\r\n    this.setState({category: route});\r\n    // Web API property that saves the category in the browser storage\r\n    // Data is saved across browser sessions\r\n    window.localStorage.setItem('category', `${route}`)\r\n  }\r\n  \r\n  // Render\r\n  render () {\r\n    const { classes } = this.props;\r\n    const { autocompleteIsOpen, category, modalItemName, favoriteItems, \r\n      formField, items, completedItems, itemNotes, \r\n      modalIsOpen, groceriesTemplate, appIsLoading } = this.state;\r\n    return (\r\n       <div className={classes.app}>\r\n          <ErrorBoundary>\r\n              {appIsLoading === \"first load\" \r\n              ? <LoadingScreen />\r\n              : <>\r\n                <FixedScroll>\r\n                  <TopNavigation>\r\n                    <TopNavigationTitle/>\r\n                    <TopNavigationToggleDarkTheme/>\r\n                    <TopNavigationCategoryDisplay \r\n                      category = {category}\r\n                      onCategoryChange = {this.onCategoryChange}\r\n                    />\r\n                    <TopNavigationFaves \r\n                      items = {items}\r\n                      favoriteItems = {favoriteItems}\r\n                      faveCheckChildElement = {this.faveCheckChildElement}\r\n                    />\r\n                  </TopNavigation>\r\n                </FixedScroll>\r\n                <Box className={'Padding-box'}>\r\n                  <Box className={`${classes.groceriesContainer} Groceries-container` }>\r\n                    <SearchArea\r\n                      formChange = {this.onFormChange}\r\n                      formSubmit = {this.onFormSubmit}\r\n                      formField = {formField}\r\n                      groceriesTemplate = {groceriesTemplate}\r\n                      autocompleteSelectValue = {this.onAutocompleteSelectValue}\r\n                      closeAutocomplete = {this.onCloseAutocomplete}\r\n                      checkFormField = {this.autocompleteCheckFormField}\r\n                      autocompleteIsOpen = {autocompleteIsOpen}\r\n                      changeAutocomplete = {this.onChangeAutocomplete}\r\n                    />\r\n                    <GroceryLists \r\n                      category = { category }\r\n                      itemNotes = { itemNotes }\r\n                      modalIsOpen = { modalIsOpen }\r\n                      modalItemName  = { modalItemName }\r\n                      modalClose = { this.modalClose }\r\n                      modalOpen = { this.modalOpen }\r\n                      onAddNote = { this.onAddNote }\r\n                      groceryItems = { items } \r\n                      completeItem = {this.onCompleteItem}\r\n                      deleteItem = {this.onDeleteItem}\r\n                      items = {items}\r\n                    />\r\n                  </Box>\r\n                  <Box className={'Completed-container'}>\r\n                    { items.length === 0 && completedItems.length === 0 && appIsLoading !== \"reloading\" && <EmptyList /> }\r\n                    { appIsLoading === \"reloading\" && <ReloadingMessage /> }\r\n                    <CompletedList \r\n                      completedItems = { completedItems }\r\n                      deleteItem = {this.onDeleteItem}\r\n                      recoverItem = {this.onRecoverItem}\r\n                      deleteallcompleted = {this.onDeleteAllCompleted}\r\n                      recoverallcompleted = {this.onRecoverAllCompleted}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              </>\r\n              }\r\n          </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// ThemeProvider will wrap App to facilitate toggling dark and light modes\r\nimport ThemeProvider from './themes/ThemeProvider'; \r\n// CssBaseline from Material UI extends CSS to <body> tag\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider> \r\n      <CssBaseline />\r\n      <App/>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}